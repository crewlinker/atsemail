linters-settings:
  staticcheck:
    checks: ["all"]
  stylecheck:
    checks: ["all"]
  funlen:
    lines: 200
  varnamelen:
    max-distance: 15
    ignore-names:
      - id # generael identifier
      - err # error values
      - db # database connections
      - tx # database transactions
      - w # io.Writers
      - r # io.Readers or http.Request
      - ok # common bool
      - rw # read write db
      - ro # read-only db
linters:
  enable-all: true
  disable:
    - execinquery # deprecated
    - gomnd # renamed
    - dupl # false positive galore
    - exhaustruct # CDK has large structs we use partially
    - gochecknoinits # frameworks and magefile use init responsibly
    - gci # no way to automate this in the vscode so default ordering is good enough
    - ireturn # our oapi implementations return interfaces all the time
    - depguard # too agressive
    - tagliatelle # we have lots of aws tags that don't follow the standards
    - nonamedreturns # makes some functions very unreadable
    - wsl # too opinionated
    - gochecknoglobals # too opinionated, globals are fine sometimes.
    - err113 # slows us down too much
    - gomoddirectives # else, why is it a toolchain feature
    - perfsprint # microoptimization, not worth it us
    - unparam # useful to sketch out a method/function

issues:
  exclude-dirs:
    - infra/builds
    - node_modules
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - forcetypeassert
        - gochecknoglobals
        - lll
        - err113
        - revive
        - wrapcheck
        - nilnil
    - path: infra
      linters:
        - mnd
        - interfacebloat
        - funlen
        - maintidx
    - path: view/view\.go
      linters:
        - contextcheck # caused by templ code generation
    - path: magefiles
      linters:
        - mnd
        - err113
        - goconst
        - wrapcheck
