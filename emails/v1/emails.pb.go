// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: emails/v1/emails.proto

package emailsv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// available values for the border radius
type BorderRadius int32

const (
	// when no radius is specified
	BorderRadius_BORDER_RADIUS_UNSPECIFIED BorderRadius = 0
	// no radius
	BorderRadius_BORDER_RADIUS_NONE BorderRadius = 1
	// small radius
	BorderRadius_BORDER_RADIUS_SMALL BorderRadius = 2
	// medium radius
	BorderRadius_BORDER_RADIUS_MEDIUM BorderRadius = 3
	// large radius
	BorderRadius_BORDER_RADIUS_LARGE BorderRadius = 4
)

// Enum value maps for BorderRadius.
var (
	BorderRadius_name = map[int32]string{
		0: "BORDER_RADIUS_UNSPECIFIED",
		1: "BORDER_RADIUS_NONE",
		2: "BORDER_RADIUS_SMALL",
		3: "BORDER_RADIUS_MEDIUM",
		4: "BORDER_RADIUS_LARGE",
	}
	BorderRadius_value = map[string]int32{
		"BORDER_RADIUS_UNSPECIFIED": 0,
		"BORDER_RADIUS_NONE":        1,
		"BORDER_RADIUS_SMALL":       2,
		"BORDER_RADIUS_MEDIUM":      3,
		"BORDER_RADIUS_LARGE":       4,
	}
)

func (x BorderRadius) Enum() *BorderRadius {
	p := new(BorderRadius)
	*p = x
	return p
}

func (x BorderRadius) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BorderRadius) Descriptor() protoreflect.EnumDescriptor {
	return file_emails_v1_emails_proto_enumTypes[0].Descriptor()
}

func (BorderRadius) Type() protoreflect.EnumType {
	return &file_emails_v1_emails_proto_enumTypes[0]
}

func (x BorderRadius) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BorderRadius.Descriptor instead.
func (BorderRadius) EnumDescriptor() ([]byte, []int) {
	return file_emails_v1_emails_proto_rawDescGZIP(), []int{0}
}

// describe input into the email for notifying recruiters of a new application
type JobApplicationNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// applicant given name
	JobApplicantGivenName string `protobuf:"bytes,1,opt,name=job_applicant_given_name,json=jobApplicantGivenName,proto3" json:"job_applicant_given_name,omitempty"`
	// applicants family name
	JobApplicantFamilyName string `protobuf:"bytes,2,opt,name=job_applicant_family_name,json=jobApplicantFamilyName,proto3" json:"job_applicant_family_name,omitempty"`
	// title of the job posting
	JobPostingTitle string `protobuf:"bytes,3,opt,name=job_posting_title,json=jobPostingTitle,proto3" json:"job_posting_title,omitempty"`
	// href to the job posting
	JobPostingHref string `protobuf:"bytes,4,opt,name=job_posting_href,json=jobPostingHref,proto3" json:"job_posting_href,omitempty"`
	// href to the application
	JobApplicationHref string `protobuf:"bytes,5,opt,name=job_application_href,json=jobApplicationHref,proto3" json:"job_application_href,omitempty"`
	// theme variables
	ThemeOverwrites *ThemeOverwrites `protobuf:"bytes,100,opt,name=theme_overwrites,json=themeOverwrites,proto3" json:"theme_overwrites,omitempty"`
}

func (x *JobApplicationNotification) Reset() {
	*x = JobApplicationNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emails_v1_emails_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobApplicationNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobApplicationNotification) ProtoMessage() {}

func (x *JobApplicationNotification) ProtoReflect() protoreflect.Message {
	mi := &file_emails_v1_emails_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobApplicationNotification.ProtoReflect.Descriptor instead.
func (*JobApplicationNotification) Descriptor() ([]byte, []int) {
	return file_emails_v1_emails_proto_rawDescGZIP(), []int{0}
}

func (x *JobApplicationNotification) GetJobApplicantGivenName() string {
	if x != nil {
		return x.JobApplicantGivenName
	}
	return ""
}

func (x *JobApplicationNotification) GetJobApplicantFamilyName() string {
	if x != nil {
		return x.JobApplicantFamilyName
	}
	return ""
}

func (x *JobApplicationNotification) GetJobPostingTitle() string {
	if x != nil {
		return x.JobPostingTitle
	}
	return ""
}

func (x *JobApplicationNotification) GetJobPostingHref() string {
	if x != nil {
		return x.JobPostingHref
	}
	return ""
}

func (x *JobApplicationNotification) GetJobApplicationHref() string {
	if x != nil {
		return x.JobApplicationHref
	}
	return ""
}

func (x *JobApplicationNotification) GetThemeOverwrites() *ThemeOverwrites {
	if x != nil {
		return x.ThemeOverwrites
	}
	return nil
}

// describe the input to rendering an email for confirming applicants of their application
type JobApplicationConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// title of the job posting
	JobPostingTitle string `protobuf:"bytes,1,opt,name=job_posting_title,json=jobPostingTitle,proto3" json:"job_posting_title,omitempty"`
	// href to the job posting
	JobPostingHref string `protobuf:"bytes,2,opt,name=job_posting_href,json=jobPostingHref,proto3" json:"job_posting_href,omitempty"`
	// href to the career site's homepage
	CareerSiteHomepageHref string `protobuf:"bytes,3,opt,name=career_site_homepage_href,json=careerSiteHomepageHref,proto3" json:"career_site_homepage_href,omitempty"`
	// name of the organization sending the email
	OrganizationName string `protobuf:"bytes,4,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	// theme variables
	ThemeOverwrites *ThemeOverwrites `protobuf:"bytes,100,opt,name=theme_overwrites,json=themeOverwrites,proto3" json:"theme_overwrites,omitempty"`
}

func (x *JobApplicationConfirm) Reset() {
	*x = JobApplicationConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emails_v1_emails_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobApplicationConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobApplicationConfirm) ProtoMessage() {}

func (x *JobApplicationConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_emails_v1_emails_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobApplicationConfirm.ProtoReflect.Descriptor instead.
func (*JobApplicationConfirm) Descriptor() ([]byte, []int) {
	return file_emails_v1_emails_proto_rawDescGZIP(), []int{1}
}

func (x *JobApplicationConfirm) GetJobPostingTitle() string {
	if x != nil {
		return x.JobPostingTitle
	}
	return ""
}

func (x *JobApplicationConfirm) GetJobPostingHref() string {
	if x != nil {
		return x.JobPostingHref
	}
	return ""
}

func (x *JobApplicationConfirm) GetCareerSiteHomepageHref() string {
	if x != nil {
		return x.CareerSiteHomepageHref
	}
	return ""
}

func (x *JobApplicationConfirm) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *JobApplicationConfirm) GetThemeOverwrites() *ThemeOverwrites {
	if x != nil {
		return x.ThemeOverwrites
	}
	return nil
}

// color used in the themes overwrite
type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// red component
	Red int32 `protobuf:"varint,1,opt,name=red,proto3" json:"red,omitempty"`
	// green component
	Green int32 `protobuf:"varint,2,opt,name=green,proto3" json:"green,omitempty"`
	// blue component
	Blue int32 `protobuf:"varint,3,opt,name=blue,proto3" json:"blue,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emails_v1_emails_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_emails_v1_emails_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_emails_v1_emails_proto_rawDescGZIP(), []int{2}
}

func (x *Color) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *Color) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *Color) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

// Image data
type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// content type
	ContentType string `protobuf:"bytes,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// the image bytes
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emails_v1_emails_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_emails_v1_emails_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_emails_v1_emails_proto_rawDescGZIP(), []int{3}
}

func (x *Image) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Image) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// can be specified to overwrite parts of the email
type ThemeOverwrites struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// radius of the border
	BorderRadius BorderRadius `protobuf:"varint,1,opt,name=border_radius,json=borderRadius,proto3,enum=emails.v1.BorderRadius" json:"border_radius,omitempty"`
	// button background color
	ButtonBackgroundColor *Color `protobuf:"bytes,2,opt,name=button_background_color,json=buttonBackgroundColor,proto3" json:"button_background_color,omitempty"`
	// text color of the button
	ButtonTextColor *Color `protobuf:"bytes,3,opt,name=button_text_color,json=buttonTextColor,proto3" json:"button_text_color,omitempty"`
	// color of the links
	LinkTextColor *Color `protobuf:"bytes,4,opt,name=link_text_color,json=linkTextColor,proto3" json:"link_text_color,omitempty"`
	// image in the the heading
	HeadingImage *Image `protobuf:"bytes,5,opt,name=heading_image,json=headingImage,proto3" json:"heading_image,omitempty"`
}

func (x *ThemeOverwrites) Reset() {
	*x = ThemeOverwrites{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emails_v1_emails_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThemeOverwrites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThemeOverwrites) ProtoMessage() {}

func (x *ThemeOverwrites) ProtoReflect() protoreflect.Message {
	mi := &file_emails_v1_emails_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThemeOverwrites.ProtoReflect.Descriptor instead.
func (*ThemeOverwrites) Descriptor() ([]byte, []int) {
	return file_emails_v1_emails_proto_rawDescGZIP(), []int{4}
}

func (x *ThemeOverwrites) GetBorderRadius() BorderRadius {
	if x != nil {
		return x.BorderRadius
	}
	return BorderRadius_BORDER_RADIUS_UNSPECIFIED
}

func (x *ThemeOverwrites) GetButtonBackgroundColor() *Color {
	if x != nil {
		return x.ButtonBackgroundColor
	}
	return nil
}

func (x *ThemeOverwrites) GetButtonTextColor() *Color {
	if x != nil {
		return x.ButtonTextColor
	}
	return nil
}

func (x *ThemeOverwrites) GetLinkTextColor() *Color {
	if x != nil {
		return x.LinkTextColor
	}
	return nil
}

func (x *ThemeOverwrites) GetHeadingImage() *Image {
	if x != nil {
		return x.HeadingImage
	}
	return nil
}

var File_emails_v1_emails_proto protoreflect.FileDescriptor

var file_emails_v1_emails_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8c, 0x03, 0x0a, 0x1a, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x18, 0x6a, 0x6f, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x5f, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x15, 0x6a, 0x6f, 0x62, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x19, 0x6a, 0x6f, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x16, 0x6a,
	0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x11, 0x6a, 0x6f, 0x62, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x6a, 0x6f, 0x62, 0x50, 0x6f,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x10, 0x6a, 0x6f,
	0x62, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x6a,
	0x6f, 0x62, 0x50, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x72, 0x65, 0x66, 0x12, 0x39, 0x0a,
	0x14, 0x6a, 0x6f, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x12, 0x6a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x72, 0x65, 0x66, 0x12, 0x45, 0x0a, 0x10, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x0f,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x22,
	0xc0, 0x02, 0x0a, 0x15, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x33, 0x0a, 0x11, 0x6a, 0x6f, 0x62,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x6a,
	0x6f, 0x62, 0x50, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31,
	0x0a, 0x10, 0x6a, 0x6f, 0x62, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x72,
	0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0e, 0x6a, 0x6f, 0x62, 0x50, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x72, 0x65,
	0x66, 0x12, 0x42, 0x0a, 0x19, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x16, 0x63,
	0x61, 0x72, 0x65, 0x65, 0x72, 0x53, 0x69, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67,
	0x65, 0x48, 0x72, 0x65, 0x66, 0x12, 0x34, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x73, 0x52, 0x0f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x22, 0x61, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x03, 0x72,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xba, 0x48, 0x05, 0x1a, 0x03, 0x18,
	0xff, 0x01, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xba, 0x48, 0x05, 0x1a, 0x03, 0x18, 0xff, 0x01,
	0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xba, 0x48, 0x05, 0x1a, 0x03, 0x18, 0xff, 0x01, 0x52,
	0x04, 0x62, 0x6c, 0x75, 0x65, 0x22, 0x5b, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0x48, 0x0d, 0x72, 0x0b, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x2f, 0x70, 0x6e, 0x67, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x09, 0xba, 0x48, 0x06, 0x7a, 0x04, 0x18, 0x80, 0xfa, 0x01, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xc8, 0x02, 0x0a, 0x0f, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x17, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x15, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3c,
	0x0a, 0x11, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x0f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x65, 0x78,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x0c, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2a, 0x91, 0x01,
	0x0a, 0x0c, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x19, 0x42, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x44, 0x49, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x42, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x44, 0x49, 0x55, 0x53, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x52, 0x41, 0x44, 0x49, 0x55, 0x53, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x42, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x44, 0x49, 0x55, 0x53, 0x5f,
	0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x52, 0x41, 0x44, 0x49, 0x55, 0x53, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10,
	0x04, 0x42, 0x94, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x42, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x72, 0x65, 0x77, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x61, 0x74, 0x73, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emails_v1_emails_proto_rawDescOnce sync.Once
	file_emails_v1_emails_proto_rawDescData = file_emails_v1_emails_proto_rawDesc
)

func file_emails_v1_emails_proto_rawDescGZIP() []byte {
	file_emails_v1_emails_proto_rawDescOnce.Do(func() {
		file_emails_v1_emails_proto_rawDescData = protoimpl.X.CompressGZIP(file_emails_v1_emails_proto_rawDescData)
	})
	return file_emails_v1_emails_proto_rawDescData
}

var file_emails_v1_emails_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_emails_v1_emails_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_emails_v1_emails_proto_goTypes = []any{
	(BorderRadius)(0),                  // 0: emails.v1.BorderRadius
	(*JobApplicationNotification)(nil), // 1: emails.v1.JobApplicationNotification
	(*JobApplicationConfirm)(nil),      // 2: emails.v1.JobApplicationConfirm
	(*Color)(nil),                      // 3: emails.v1.Color
	(*Image)(nil),                      // 4: emails.v1.Image
	(*ThemeOverwrites)(nil),            // 5: emails.v1.ThemeOverwrites
}
var file_emails_v1_emails_proto_depIdxs = []int32{
	5, // 0: emails.v1.JobApplicationNotification.theme_overwrites:type_name -> emails.v1.ThemeOverwrites
	5, // 1: emails.v1.JobApplicationConfirm.theme_overwrites:type_name -> emails.v1.ThemeOverwrites
	0, // 2: emails.v1.ThemeOverwrites.border_radius:type_name -> emails.v1.BorderRadius
	3, // 3: emails.v1.ThemeOverwrites.button_background_color:type_name -> emails.v1.Color
	3, // 4: emails.v1.ThemeOverwrites.button_text_color:type_name -> emails.v1.Color
	3, // 5: emails.v1.ThemeOverwrites.link_text_color:type_name -> emails.v1.Color
	4, // 6: emails.v1.ThemeOverwrites.heading_image:type_name -> emails.v1.Image
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_emails_v1_emails_proto_init() }
func file_emails_v1_emails_proto_init() {
	if File_emails_v1_emails_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_emails_v1_emails_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*JobApplicationNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emails_v1_emails_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*JobApplicationConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emails_v1_emails_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emails_v1_emails_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emails_v1_emails_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ThemeOverwrites); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emails_v1_emails_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_emails_v1_emails_proto_goTypes,
		DependencyIndexes: file_emails_v1_emails_proto_depIdxs,
		EnumInfos:         file_emails_v1_emails_proto_enumTypes,
		MessageInfos:      file_emails_v1_emails_proto_msgTypes,
	}.Build()
	File_emails_v1_emails_proto = out.File
	file_emails_v1_emails_proto_rawDesc = nil
	file_emails_v1_emails_proto_goTypes = nil
	file_emails_v1_emails_proto_depIdxs = nil
}
